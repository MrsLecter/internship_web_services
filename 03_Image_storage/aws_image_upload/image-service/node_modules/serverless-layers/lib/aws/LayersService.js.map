{"version":3,"sources":["../../src/aws/LayersService.js"],"names":["AbstractService","require","LayersService","params","Content","S3Bucket","bucketName","S3Key","zipFileKeyName","LayerName","layerName","Description","CompatibleRuntimes","plugin","settings","compatibleRuntimes","CompatibleArchitectures","compatibleArchitectures","awsRequest","checkError","then","result","log","cacheObject","LayerVersionArn","response","LayerVersions","length","deleteQueue","map","layerVersion","Version","VersionNumber","Promise","all","cleanUpLayers","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;IAEMC,a;;;;;;;;;;;;;0GACJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,MADR,GACiB;AACbC,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,QAAQ,EAAE,KAAKC,UADR;AAEPC,oBAAAA,KAAK,EAAE,KAAKC;AAFL,mBADI;AAKbC,kBAAAA,SAAS,EAAE,KAAKC,SALH;AAMbC,kBAAAA,WAAW,EAAE,qCANA;AAObC,kBAAAA,kBAAkB,EAAE,KAAKC,MAAL,CAAYC,QAAZ,CAAqBC,kBAP5B;AAQbC,kBAAAA,uBAAuB,EAAE,KAAKH,MAAL,CAAYC,QAAZ,CAAqBG;AARjC,iBADjB;AAAA,iDAYS,KAAKC,UAAL,CAAgB,4BAAhB,EAA8Cf,MAA9C,EAAsD;AAAEgB,kBAAAA,UAAU,EAAE;AAAd,iBAAtD,EACJC,IADI,CACC,UAACC,MAAD,EAAY;AAChB,kBAAA,KAAI,CAACR,MAAL,CAAYS,GAAZ,CAAgB,gCAAhB;;AACA,kBAAA,KAAI,CAACT,MAAL,CAAYU,WAAZ,CAAwBC,eAAxB,GAA0CH,MAAM,CAACG,eAAjD;AACA,yBAAOH,MAAP;AACD,iBALI,CAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;yGAoBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACQlB,gBAAAA,MADR,GACiB;AACbM,kBAAAA,SAAS,EAAE,KAAKC;AADH,iBADjB;AAAA;AAAA,uBAKyB,KAAKQ,UAAL,CAAgB,0BAAhB,EAA4Cf,MAA5C,EAAoD;AAAEgB,kBAAAA,UAAU,EAAE;AAAd,iBAApD,CALzB;;AAAA;AAKQM,gBAAAA,QALR;;AAAA,sBAOMA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,KAAkC,CAPxC;AAAA;AAAA;AAAA;;AAQI,qBAAKd,MAAL,CAAYS,GAAZ,CAAgB,0BAAhB;AARJ;;AAAA;AAYQM,gBAAAA,WAZR,GAYsBH,QAAQ,CAACC,aAAT,CAAuBG,GAAvB,CAA2B,UAACC,YAAD,EAAkB;AAC/D,kBAAA,MAAI,CAACjB,MAAL,CAAYS,GAAZ,mCAA2CQ,YAAY,CAACC,OAAxD;;AACA,yBAAO,MAAI,CAACb,UAAL,CAAgB,2BAAhB,EAA6C;AAClDT,oBAAAA,SAAS,EAAE,MAAI,CAACC,SADkC;AAElDsB,oBAAAA,aAAa,EAAEF,YAAY,CAACC;AAFsB,mBAA7C,EAGJ;AAAEZ,oBAAAA,UAAU,EAAE;AAAd,mBAHI,CAAP;AAID,iBANmB,CAZtB;AAAA;AAAA,uBAoBQc,OAAO,CAACC,GAAR,CAAYN,WAAZ,CApBR;;AAAA;AAAA;AAAA,uBAsBQ,KAAKO,aAAL,EAtBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;EArB0BnC,e;;AA+C5BoC,MAAM,CAACC,OAAP,GAAiBnC,aAAjB","sourcesContent":["const AbstractService = require('../AbstractService');\n\nclass LayersService extends AbstractService {\n  async publishVersion() {\n    const params = {\n      Content: {\n        S3Bucket: this.bucketName,\n        S3Key: this.zipFileKeyName\n      },\n      LayerName: this.layerName,\n      Description: 'created by serverless-layers plugin',\n      CompatibleRuntimes: this.plugin.settings.compatibleRuntimes,\n      CompatibleArchitectures: this.plugin.settings.compatibleArchitectures\n    };\n\n    return this.awsRequest('Lambda:publishLayerVersion', params, { checkError: true })\n      .then((result) => {\n        this.plugin.log('New layer version published...');\n        this.plugin.cacheObject.LayerVersionArn = result.LayerVersionArn;\n        return result;\n      });\n  }\n\n  async cleanUpLayers() {\n    const params = {\n      LayerName: this.layerName\n    };\n\n    const response = await this.awsRequest('Lambda:listLayerVersions', params, { checkError: true });\n\n    if (response.LayerVersions.length === 0) {\n      this.plugin.log('Layers removal finished.');\n      return;\n    }\n\n    const deleteQueue = response.LayerVersions.map((layerVersion) => {\n      this.plugin.log(`Removing layer version: ${layerVersion.Version}`);\n      return this.awsRequest('Lambda:deleteLayerVersion', {\n        LayerName: this.layerName,\n        VersionNumber: layerVersion.Version\n      }, { checkError: true });\n    });\n\n    await Promise.all(deleteQueue);\n\n    await this.cleanUpLayers();\n  }\n}\n\nmodule.exports = LayersService;\n"],"file":"LayersService.js"}