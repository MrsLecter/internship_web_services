{
  "service": {
    "service": "image-service",
    "serviceObject": {
      "name": "image-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "apiGateway": {
        "minimumCompressionSize": 1024,
        "shouldStartNameWithService": true
      },
      "environment": {
        "BUCKET_NAME": "image-s3bucket-storage-next",
        "REGION": "us-east-1",
        "ACCESS_KEY_ID": "AKIAVALYXPL422HP2Q63",
        "SECRET_ACCESS_KEY": "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",
        "TABLE_NAME": "userimages",
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
        "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000"
      },
      "region": "us-east-1",
      "alb": {
        "authorizers": {
          "Cognito": {
            "type": "cognito",
            "userPoolArn": "arn:aws:cognito-idp:us-east-1:344387451641:userpool/us-east-1_CIHwDAAt7",
            "userPoolClientId": "3ebo75r6gul173m7fso9o2chka",
            "userPoolDomain": "e3ygsvc037",
            "onUnauthenticatedRequest": "authenticate"
          }
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "layers": [
        "arn:aws:lambda:us-east-1:344387451641:layer:image-service-dev-nodejs-default:11"
      ],
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/image-service-dev-hello"
            }
          },
          "GetImagesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/image-service-dev-getImages"
            }
          },
          "PostImageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/image-service-dev-postImage"
            }
          },
          "DeleteImageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/image-service-dev-deleteImage"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "image-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/image-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/image-service-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "image-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/image-service/dev/1660921817993-2022-08-19T15:10:17.993Z/hello.zip"
              },
              "Handler": "src/functions/hello/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "image-service-dev-hello",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "image-s3bucket-storage-next",
                  "REGION": "us-east-1",
                  "ACCESS_KEY_ID": "AKIAVALYXPL422HP2Q63",
                  "SECRET_ACCESS_KEY": "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",
                  "TABLE_NAME": "userimages",
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:344387451641:layer:image-service-dev-nodejs-default:11"
              ]
            },
            "DependsOn": [
              "HelloLogGroup"
            ]
          },
          "GetImagesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/image-service/dev/1660921817993-2022-08-19T15:10:17.993Z/getImages.zip"
              },
              "Handler": "src/functions/getImages/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "image-service-dev-getImages",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "image-s3bucket-storage-next",
                  "REGION": "us-east-1",
                  "ACCESS_KEY_ID": "AKIAVALYXPL422HP2Q63",
                  "SECRET_ACCESS_KEY": "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",
                  "TABLE_NAME": "userimages",
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:344387451641:layer:image-service-dev-nodejs-default:11"
              ]
            },
            "DependsOn": [
              "GetImagesLogGroup"
            ]
          },
          "PostImageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/image-service/dev/1660921817993-2022-08-19T15:10:17.993Z/postImage.zip"
              },
              "Handler": "src/functions/postImage/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "image-service-dev-postImage",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "image-s3bucket-storage-next",
                  "REGION": "us-east-1",
                  "ACCESS_KEY_ID": "AKIAVALYXPL422HP2Q63",
                  "SECRET_ACCESS_KEY": "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",
                  "TABLE_NAME": "userimages",
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:344387451641:layer:image-service-dev-nodejs-default:11"
              ]
            },
            "DependsOn": [
              "PostImageLogGroup"
            ]
          },
          "DeleteImageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/image-service/dev/1660921817993-2022-08-19T15:10:17.993Z/deleteImage.zip"
              },
              "Handler": "src/functions/deleteImage/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "image-service-dev-deleteImage",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "image-s3bucket-storage-next",
                  "REGION": "us-east-1",
                  "ACCESS_KEY_ID": "AKIAVALYXPL422HP2Q63",
                  "SECRET_ACCESS_KEY": "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",
                  "TABLE_NAME": "userimages",
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:344387451641:layer:image-service-dev-nodejs-default:11"
              ]
            },
            "DependsOn": [
              "DeleteImageLogGroup"
            ]
          },
          "HelloLambdaVersion49w6KrUbF5ZT9xYLxsXiBxX9piQ9zY4V8UyDLaBXZlc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "CodeSha256": "vMv6YoPFDmwHG9SK9lbxckqudizRFlXSW2cewH+9iDU="
            }
          },
          "GetImagesLambdaVersionvlKu8w8e8uYMGzlU7lGHsFQsYBkCAJObaBjfeQMwJYI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetImagesLambdaFunction"
              },
              "CodeSha256": "luFqlRCwEkn9K/pqLM715F6LYPxRiNcw6MtBHJZM7nU="
            }
          },
          "PostImageLambdaVersionGC2Tu8L3xqXK1TmXZTOhQYY5SMBXnzRZv2EVEKI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostImageLambdaFunction"
              },
              "CodeSha256": "XwSvQM93wYXP4BZlisOG3n5Gl4ccp8Su/nDuSjPDqTY="
            }
          },
          "DeleteImageLambdaVersion8mjcy7FeUo1Yxmw9EwERRvBV08jdqYXtTnK8dJJbc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteImageLambdaFunction"
              },
              "CodeSha256": "LmN+Rc0L1LgwjHyDjeejwAVe0nq0SFAD3D5MCipiqe0="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "image-service-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": "",
              "MinimumCompressionSize": 1024
            }
          },
          "ApiGatewayResourceHello": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "hello",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceImages": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "images",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHelloPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHello"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "MyAuthorizerApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HelloLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayImageserviceRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodHelloPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": "MyAuthorizerApiGatewayAuthorizer"
          },
          "ApiGatewayMethodImagesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceImages"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetImagesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetImagesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodImagesPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceImages"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PostImageLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PostImageLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodImagesDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceImages"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteImageLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteImageLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayImageserviceRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "image-service-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayMethodHelloPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          },
          "MyAuthorizerApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 300,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "MyAuthorizer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                "arn:aws:cognito-idp:us-east-1:344387451641:userpool/us-east-1_CIHwDAAt7"
              ]
            }
          },
          "ApiGatewayDeployment1660921745312": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodHelloPost",
              "ApiGatewayMethodImagesGet",
              "ApiGatewayMethodImagesPost",
              "ApiGatewayMethodImagesDelete"
            ]
          },
          "HelloLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetImagesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetImagesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PostImageLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostImageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteImageLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteImageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool"
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "userimages",
              "AttributeDefinitions": [
                {
                  "AttributeName": "user",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "imageHash",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "user",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "imageHash",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-image-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloLambdaVersion49w6KrUbF5ZT9xYLxsXiBxX9piQ9zY4V8UyDLaBXZlc"
            },
            "Export": {
              "Name": "sls-image-service-dev-HelloLambdaFunctionQualifiedArn"
            }
          },
          "GetImagesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetImagesLambdaVersionvlKu8w8e8uYMGzlU7lGHsFQsYBkCAJObaBjfeQMwJYI"
            },
            "Export": {
              "Name": "sls-image-service-dev-GetImagesLambdaFunctionQualifiedArn"
            }
          },
          "PostImageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostImageLambdaVersionGC2Tu8L3xqXK1TmXZTOhQYY5SMBXnzRZv2EVEKI"
            },
            "Export": {
              "Name": "sls-image-service-dev-PostImageLambdaFunctionQualifiedArn"
            }
          },
          "DeleteImageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteImageLambdaVersion8mjcy7FeUo1Yxmw9EwERRvBV08jdqYXtTnK8dJJbc"
            },
            "Export": {
              "Name": "sls-image-service-dev-DeleteImageLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-image-service-dev-ServiceEndpoint"
            }
          },
          "ImageDashserviceDashdevDashnodejsDashdefaultLambdaLayerQualifiedArn": {
            "Value": "arn:aws:lambda:us-east-1:344387451641:layer:image-service-dev-nodejs-default:11",
            "Export": {
              "Name": "ImageDashserviceDashdevDashnodejsDashdefaultLambdaLayerQualifiedArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "webpack": {
        "webpackConfig": "webpack.config.js",
        "includeModules": false,
        "packager": "npm",
        "excludeFiles": "src/**/*.test.js"
      },
      "tableName": "userimages",
      "serverless-layers": {
        "functions": {
          "hello": {
            "handler": "src/functions/hello/handler.main",
            "events": [
              {
                "http": {
                  "method": "post",
                  "path": "hello",
                  "request": {
                    "schemas": {
                      "application/json": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "email",
                          "password"
                        ]
                      }
                    }
                  },
                  "authorizer": {
                    "name": "MyAuthorizer",
                    "type": "COGNITO_USER_POOLS",
                    "arn": "arn:aws:cognito-idp:us-east-1:344387451641:userpool/us-east-1_CIHwDAAt7"
                  }
                },
                "authoriser": {
                  "cognitoUserPool": {
                    "pool": "image-s3-pool",
                    "trigger": "PostConfirmation"
                  }
                }
              }
            ]
          },
          "getImages": {
            "handler": "src/functions/getImages/handler.main",
            "events": [
              {
                "http": {
                  "method": "get",
                  "path": "images",
                  "request": {}
                }
              }
            ]
          },
          "postImage": {
            "handler": "src/functions/postImage/handler.main",
            "events": [
              {
                "http": {
                  "method": "post",
                  "path": "images",
                  "request": {}
                }
              }
            ]
          },
          "deleteImage": {
            "handler": "src/functions/deleteImage/handler.main",
            "events": [
              {
                "http": {
                  "method": "delete",
                  "path": "images",
                  "request": {}
                }
              }
            ]
          }
        },
        "dependenciesPath": "./package.json",
        "layersDeploymentBucket": "image-s3bucket-storage-next"
      }
    },
    "plugins": [
      "serverless-webpack",
      "serverless-layers"
    ],
    "pluginsData": {},
    "functions": {
      "hello": {
        "handler": "src/functions/hello/handler.main",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "hello",
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodHelloPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "name": "MyAuthorizer",
                "arn": "arn:aws:cognito-idp:us-east-1:344387451641:userpool/us-east-1_CIHwDAAt7",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            },
            "authoriser": {
              "cognitoUserPool": {
                "pool": "image-s3-pool",
                "trigger": "PostConfirmation"
              }
            }
          }
        ],
        "name": "image-service-dev-hello",
        "package": {
          "artifact": ".serverless/hello.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "HelloLambdaVersion49w6KrUbF5ZT9xYLxsXiBxX9piQ9zY4V8UyDLaBXZlc"
      },
      "getImages": {
        "handler": "src/functions/getImages/handler.main",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "images",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "image-service-dev-getImages",
        "package": {
          "artifact": ".serverless/getImages.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "GetImagesLambdaVersionvlKu8w8e8uYMGzlU7lGHsFQsYBkCAJObaBjfeQMwJYI"
      },
      "postImage": {
        "handler": "src/functions/postImage/handler.main",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "images",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "image-service-dev-postImage",
        "package": {
          "artifact": ".serverless/postImage.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "PostImageLambdaVersionGC2Tu8L3xqXK1TmXZTOhQYY5SMBXnzRZv2EVEKI"
      },
      "deleteImage": {
        "handler": "src/functions/deleteImage/handler.main",
        "events": [
          {
            "http": {
              "method": "delete",
              "path": "images",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "image-service-dev-deleteImage",
        "package": {
          "artifact": ".serverless/deleteImage.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "DeleteImageLambdaVersion8mjcy7FeUo1Yxmw9EwERRvBV08jdqYXtTnK8dJJbc"
      }
    },
    "resources": {
      "Resources": {
        "CognitoUserPool": {
          "Type": "AWS::Cognito::UserPool"
        },
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "userimages",
            "AttributeDefinitions": [
              {
                "AttributeName": "user",
                "AttributeType": "S"
              },
              {
                "AttributeName": "imageHash",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "user",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "imageHash",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {
        "ImageDashserviceDashdevDashnodejsDashdefaultLambdaLayerQualifiedArn": {
          "Value": "arn:aws:lambda:us-east-1:344387451641:layer:image-service-dev-nodejs-default:11",
          "Export": {
            "Name": "ImageDashserviceDashdevDashnodejsDashdefaultLambdaLayerQualifiedArn"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.ts",
    "initialServerlessConfig": {
      "service": "image-service",
      "frameworkVersion": "3",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/image-service/dev/code-artifacts"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/image-service/dev/1660921817993-2022-08-19T15:10:17.993Z",
    "artifact": ""
  }
}